# This is a basic workflow to help you get started with Actions

name: build docker

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
      - 'release-versions/*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Get version number
        run: |
          DEFI_VERSION_=$(cat release-versions/defichain-latest.txt)
          echo "defi_version_name=${DEFI_VERSION_}" >> $GITHUB_ENV
          echo "defi_version=${DEFI_VERSION_:1}" >> GITHUB_ENV
          echo "cut version $(echo "${DEFI_VERSION_}" | cut -c 1-)"
          echo "substr version ${DEFI_VERSION_:1}"
          echo "version: ${DEFI_VERSION_}"
      -
        name: Print version number
        run: |
          echo "version: ${{ env.defi_version }} ${{ env.defi_version_name }}"
          echo "version2: $defi_version"
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v1
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       -
#         name: Login to DockerHub
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@v1 
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           file: dockerfiles/defichain.dockerfile
#           build-args: BUILD_VERSION=${{ env.defi_version }}
#           platforms: linux/arm/v7, linux/arm64
#           push: true
#           tags: jha749/defichain:latest, jha749/defichain:${{ env.defi_version }}
